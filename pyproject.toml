[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "linkedin-job-searcher"
version = "2.0.0"
description = "Advanced LinkedIn job search URL builder with precision time filtering"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "LinkedIn Job Searcher Team"}
]
keywords = ["linkedin", "job-search", "url-builder", "automation", "recruitment"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Office/Business",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "requests>=2.31.0",
    "streamlit>=1.28.1",
    "urllib3>=2.0.7",
    "validators>=0.22.0",
    "pyperclip>=1.8.2",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/username/linkedin-job-searcher"
Documentation = "https://github.com/username/linkedin-job-searcher#readme"
Repository = "https://github.com/username/linkedin-job-searcher"
"Bug Tracker" = "https://github.com/username/linkedin-job-searcher/issues"

[project.scripts]
linkedin-job-search = "cli:main"

[tool.setuptools.packages.find]
where = [""]
include = ["linkedin_url_builder*"]

[tool.black]
line-length = 127
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 127
known_first_party = ["linkedin_url_builder"]

[tool.flake8]
max-line-length = 127
extend-ignore = ["E203", "W503", "E501"]
max-complexity = 15

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=linkedin_url_builder",
    "--cov-report=html",
    "--cov-report=term-missing",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["linkedin_url_builder"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "streamlit.*",
    "pyperclip.*",
    "validators.*",
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py39"
line-length = 127

[tool.ruff.lint]
select = [
    "E", "W",  # pycodestyle
    "F",       # pyflakes
    "B",       # flake8-bugbear
    "C4",      # flake8-comprehensions
    "I",       # isort
    "N",       # pep8-naming
    "UP",      # pyupgrade
]
ignore = [
    "E203",  # whitespace before ':'
]

[tool.ruff.per-file-ignores]
"tests/*" = ["D"]
