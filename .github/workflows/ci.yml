name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # Don't cancel other jobs if one fails
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run comprehensive test suite
      run: |
        echo "Running test_builder.py..."
        python test_builder.py || (echo "‚ùå test_builder.py failed" && exit 1)
        echo "‚úÖ test_builder.py passed"

        echo "Running test_new_features.py..."
        python test_new_features.py || (echo "‚ùå test_new_features.py failed" && exit 1)
        echo "‚úÖ test_new_features.py passed"

        echo "Running test_linkedin_format.py..."
        python test_linkedin_format.py || (echo "‚ùå test_linkedin_format.py failed" && exit 1)
        echo "‚úÖ test_linkedin_format.py passed"

        echo "Running test_turkey_geoid.py..."
        python test_turkey_geoid.py || (echo "‚ùå test_turkey_geoid.py failed" && exit 1)
        echo "‚úÖ test_turkey_geoid.py passed"

        echo "üéâ All test files passed successfully!"

    - name: Test CLI functionality
      run: |
        echo "Testing CLI with basic parameters..."
        python cli.py "Test Job" --location "Test Location" --time "1 hour" --summary || (echo "‚ùå CLI test failed" && exit 1)
        echo "‚úÖ CLI test passed"

    - name: Test demo functionality
      run: |
        echo "Testing demo script..."
        python demo.py || (echo "‚ùå Demo test failed" && exit 1)
        echo "‚úÖ Demo test passed"

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies and linting tools
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black isort

    - name: Run flake8 (relaxed)
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --extend-ignore=E203,W503
        flake8 . --count --exit-zero --max-complexity=15 --max-line-length=127 --statistics

    - name: Check formatting with black (non-blocking)
      run: |
        black --check --diff . || echo "Black formatting issues found but not blocking"

    - name: Check import sorting with isort (non-blocking)
      run: |
        isort --check-only --diff . || echo "Import sorting issues found but not blocking"
